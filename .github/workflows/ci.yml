name: Build test and deploy
on:
  push:
    branches:
      - main
      - alpha
      - beta
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build and test
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: ['17.0.3']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Scala
        uses: actions/setup-java@v3.4.1
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
          cache: 'sbt'

      - name: Get scala version
        id: get-scala-version
        run: |
          export SCALA_VERSION=`sbt --no-colors --error 'set aggregate := false; print scalaVersion'`
          echo "::set-output name=scala-version::$SCALA_VERSION"          

      - name: Quality Assurance
        run: sbt qaCheck

      - name: Test
        run: sbt test

      - name: Generate coverage report
        run: sbt jacocoAggregate

      - name: Publish coverage report
        if: ${{ matrix.os }} == 'ubuntu-22.04' && ${{ matrix.java-version }} == '17.0.3' # Find a better solution instead hardcoded versions
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./target/scala-${{steps.get-scala-version.outputs.scala-version}}/jacoco/report/aggregate/jacoco.xml
          verbose: true

      - name: Build docsite
        run: sbt ubidocGenerate

  publish:
    name: Publish
    needs: [build]
    runs-on: ubuntu-22.04
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/alpha' || github.ref == 'refs/heads/beta')
    steps:
      - name: Setup atedeg-bot
        id: atedeg-bot
        uses: tibdex/github-app-token@v1.6.0
        with:
          app_id: ${{ secrets.ATEDEG_BOT_APP_ID }}
          private_key: ${{ secrets.ATEDEG_BOT_PRIVATE_KEY }}

      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          token: ${{ steps.atedeg-bot.outputs.token }}
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Release
        uses: atedeg/scala-release@v1.0.3
        with:
          java-version: "17.0.3"
          pgp-secret: ${{ secrets.PGP_SECRET }}
          pgp-passphrase: ${{ secrets.PGP_PASSPHRASE }}
          sonatype-username: ${{ secrets.SONATYPE_USERNAME }}
          sonatype-password: ${{ secrets.SONATYPE_PASSWORD }}
          github-token: ${{ steps.atedeg-bot.outputs.token }}
