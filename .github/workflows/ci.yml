name: Build test and deploy
on:
  push:
    branches:
      - main
      - alpha
      - beta
  pull_request:
  workflow_dispatch:

jobs:
  wartremover:
    name: Wartremover lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Scala
        uses: actions/setup-java@v3.5.0
        with:
          distribution: "temurin"
          java-version: "17.0.4"
          cache: "sbt"

      - name: Wartremover checks
        run: sbt wartremoverInspect

  scalafix:
    name: Scalafix lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Scala
        uses: actions/setup-java@v3.5.0
        with:
          distribution: "temurin"
          java-version: "17.0.4"
          cache: "sbt"

      - name: Scalafix checks
        run: sbt 'scalafixAll --check'

  scalafmt:
    name: Scalafmt lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Scala
        uses: actions/setup-java@v3.5.0
        with:
          distribution: "temurin"
          java-version: "17.0.4"
          cache: "sbt"

      - name: Scalafix checks
        run: sbt scalafmtCheckAll

  tests:
    name: Run unit tests
    strategy:
      matrix:
        os: [ubuntu-22.04]
        java: ["17.0.4"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Scala
        uses: actions/setup-java@v3.5.0
        with:
          distribution: "temurin"
          java-version: ${{ matrix.java }}
          cache: "sbt"

      - name: Scalatest
        run: sbt test
  latex:
    name: Compile latex source
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build report
        uses: xu-cheng/latex-action@v2
        with:
          working_directory: report
          root_file: mdm-dt.tex
          args: -pdf -file-line-error -halt-on-error -interaction=nonstopmode -shell-escape

      - name: Create tag for the current release
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: DanySK/semver-autotag-action@0.1.0

      - name: Release report
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ -z ${GITHUB_TOKEN} ]]; then
            echo "No token found... unable to deploy"
            false
          else
            TAG=$(git describe --tags --exact-match HEAD)
            hub release create -m "$(git tag -l --format='%(contents)' "$TAG")" "$TAG" || true
            for file in `ls report/*.pdf`
            do
              echo "Release of $file"
              gh release upload "$TAG" $file --clobber
            done
          fi
